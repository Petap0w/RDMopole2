<!DOCTYPE html="{{locale}}">
    {{> header}}
    <body>
        {{> navbar}}
        <br>
        <h1 align="center" id="header">{{Quests}}</h1>
        <br>
        <div style="width:90%; margin-left:calc(5%);">
            <ul class="nav nav-pills justify-content-center">
                <li class="nav-item"><a class="nav-link active" data-toggle="pill" href="#billboard">Billboard</a></li>
                <li class="nav-item"><a class="nav-link" data-toggle="pill" href="#statistics">Statistics</a></li>
            </ul>

            <div class="modal fade" id="filtersModal" tabindex="-1" role="dialog" aria-labelledby="filtersModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="filtersModalLabel">{{Quest Filters}}</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <label class="input-group-text" for="filter-reward">{{Reward}}</label>
                                    </div>
                                    <input type="text" id="filter-reward" class="form-control input-lg" onkeyup="reload()" placeholder="{{Search by reward..}}" title="{{Type in a reward}}">
                                </div>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <label class="input-group-text" for="filter-task">{{Task}}</label>
                                    </div>
                                    <input type="text" id="filter-task" class="form-control input-lg" onkeyup="reload()" placeholder="{{Search by task..}}" title="{{Type in a task}}">
                                </div>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <label class="input-group-text" for="filter-pokestop">{{Pokestop}}</label>
                                    </div>
                                    <input type="text" id="filter-pokestop" class="form-control input-lg" onkeyup="reload()" placeholder="{{Search by pokestop..}}" title="{{Type in a pokestop name}}">
                                </div>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <label class="input-group-text" for="filter-city">{{City}}</label>
                                    </div>
                                    <select multiple id="filter-city" class="custom-select" onchange="reload()">
                                        <option value="all" selected>All</option>
                                        {{#cities}}
                                        <option value="{{name}}">{{name}}</option>
                                        {{/cities}}
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" id="reset-filters">{{Reset Filters}}</button>
                            <button type="button" class="btn btn-primary" data-dismiss="modal">{{Close}}</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-content">
                <div class="tab-pane active" id="billboard">
                    <div class="btn-group btn-group-sm float-right">
                        <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#filtersModal">
                            <i class="fa fa-fw fa-filter" aria-hidden="true"></i>
                        </button>
                    </div>
                    <br><br>
                    <table id="table" class="table table-{{style}} table-striped table-bordered table-hover dt-responsive nowrap" style="position: center; width:100%">
                        <thead class="thead-dark">
                            <tr>
                                <th class="all">{{Reward}}</th>
                                <th class="all">{{Quest}}</th>
                                <th class="min-desktop">{{Condition(s)}}</th>
                                <th class="all">{{Pokestop Name}}</th>
                                <th class="all">{{City}}</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="tab-pane" id="statistics">
                    <br>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="stats-start">Start Date</label>
                        </div>
                        <input id="stats-start" class="flatpickr" placeholder="Select Date.." data-toggle="datetimepicker">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="stats-end">End Date</label>
                        </div>
                        <input id="stats-end" class="flatpickr" placeholder="Select Date.." data-toggle="datetimepicker">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="stats-reward">Reward</label>
                        </div>
                        <select id="stats-reward" class="custom-select" onchange="getStats()">
                            <option disabled selected>Select</option>
                            <option value="all">All</option>
                            {{#rewards}}
                            <option value="{{id}}">{{name}}</option>
                            {{/rewards}}
                        </select>
                    </div>
                    <br>
                    <div class="justify-content-center">
                        <canvas id="canvas"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <br>
    </body>
    {{> footer}}
</html>

<script type='text/javascript' src='./js/storage.js'></script>
<script type='text/javascript' src='./js/utils.js'></script>
<script type='text/javascript' src='https://cdn.jsdelivr.net/npm/chart.js@2.8.0'></script>
<script type='text/javascript'>
    $("[data-toggle='datetimepicker']").flatpickr({
        altInput: true,
        altFormat: "F j, Y",
        dateFormat: "Y-m-d",
        enableTime: false
    });

    // Load values from local storage
    if (get('quests_filter_reward')) {
        $('#filter-reward').val(get('quests_filter_reward'));
    }
    if (get('quests_filter_task')) {
        $('#filter-task').val(get('quests_filter_task'));
    }
    if (get('quests_filter_pokestop')) {
        $('#filter-pokestop').val(get('quests_filter_pokestop'));
    }
    if (get('quests_filter_city')) {
        $('#filter-city').val(JSON.parse(get('quests_filter_city')));
    }
    var reward = $('#filter-reward').val();
    var task = $('#filter-task').val();
    var pokestop = $('#filter-pokestop').val();
    var city = $('#filter-city').val();
    var query = `?reward=${reward}&task=${task}&pokestop=${pokestop}&city=${city}`;
    if ("{{style}}" === 'dark') {
        $('body').css('background-color', 'rgb(33, 37, 41)');
        $('body').css('color', 'rgb(255, 255, 255)');
        $('.modal-content').css('background-color', 'rgb(33, 37, 41)');
        $('.modal-content').css('color', 'rgb(255, 255, 255)');
    }
    //$(document).ready(function() {
        const table = $('#table').DataTable( {
            "ajax": {
                "url": "/api/quests" + query,
                "dataSrc": "data.quests",
                "async": true,
                "type": "POST"
            },
            //"dom": "Bfrtip",
            // Reference: https://stackoverflow.com/a/43176143
            /*
            "dom": "<'row'<'col-sm-8'B><'col-sm-4'f>t>" +
                   "<'row'<'col-sm-4'li><'col-sm-8'p>>",
            */
            "dom": "<'row'<'col-sm-12 col-md-6'B><'col-sm-12 col-md-6'f>>" +
                   "<'row'<'col-sm-12'tr>>" +
                   "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
            "fixedHeader": {
                "header": true,
                "headerOffset": $('.navbar').height() + 15
            },
            "buttons": [
                "colvis",
                "pageLength"
            ],
            "colReorder": true,
            "stateSave": true,
            "paging":   true,
            "lengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]],
            "pageLength": 100,
            "columns": [
                { "data": "reward" },
                { "data": "quest" },
                { "data": "conditions" },
                { "data": "pokestop_name" },
                { "data": "city" }
            ],
            "info": true,
            "order": [[ 0, "asc" ]],
            "search.caseInsensitive": true,
            "responsive": true
        });
        table.on('draw.dt', function() {
            setTimeout(function () {
                table.ajax.reload(null, false);
            }, 30 * 1000);
        });
        function reload() {
            var reward = $('#filter-reward').val();
            var task = $('#filter-task').val();
            var pokestop = $('#filter-pokestop').val();
            var city = $('#filter-city').val();
            var query = `?reward=${reward}&task=${task}&pokestop=${pokestop}&city=${city}`;
            table.ajax.url('/api/quests' + query).load();

            // Cache filter values
            set('quests_filter_reward', reward);
            set('quests_filter_task', task);
            set('quests_filter_pokestop', pokestop);
            set('quests_filter_city', JSON.stringify(city));
        }
        $('#reset-filters').on('click', function() {
            $('#filter-reward').val('');
            $('#filter-task').val('');
            $('#filter-pokestop').val('');
            $('#filter-city').val('all');
            reload();
        });

        var ctx = document.getElementById('canvas').getContext('2d');
		var questChart = new Chart(ctx, {
            type: "line",
            data: {
                labels: [],
                datasets: []
            },
            options: {
                tooltips: true,
                elements: {
                    rectangle: {
                        backgroundColor: "dodgerblue",
                        borderColor: colorize.bind(null, true, false),
                        borderWidth: 0.5
                    }
                },
                responsive: true,
                maintainAspectRatio: true,
                legend: {
                    display: false,
                    position: 'right',
                },
                title: {
                    display: true,
                    text: 'Field Research Quest Statistics'
                },
                tooltips: { mode: "index", intersect: false, },
                hover: { mode: "nearest", intersect: true },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Date'
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Amount'
                        }
                    }]
                }
            }
        });
        function getStats() {
            var start = $('#stats-start').val();
            var end = $('#stats-end').val();
            var reward = $('#stats-reward').val();
            $.ajax({
                url: `/api/stats?type=quests&start=${start}&end=${end}&reward=${reward}`,
                type: 'POST', 
                success: function(result) {
                    if (result === null) {
                        console.log("Failed to parse result value.");
                        return;
                    }
                    console.log("Result:", result);
                    if (result) {
                        var labels = [];
                        var values = [];
                        $.each(result.stats, function(key, value) {
                            labels.push(value.date);
                            var value = parseInt(value.count);
                            values.push(value);
                        });
                        removeDataset(questChart);
                        var obj = { 
                            labels: labels, 
                            datasets: [{
                                data: values,
                                backgroundColor: "dodgerblue",
                                borderColor: "gray",
                                label: "Reward", // TODO: Get quest reward name
                                fill: false
                            }]
                        };
                        questChart.data = obj;
                        questChart.update();

                        /*
                        removeDataset(raidChart);
                        for (var i = 0; i < result.stats.length; i++) {
                            var stat = result.stats[i];
                            addDataset(raidChart, [], { data: [stat.count], backgroundColor: '#' + randomColor(), borderColor: 'White', borderWidth: 0.3, label: stat.date });
                        }
                        */
                    }
                }
            });
        }
    //});
</script>